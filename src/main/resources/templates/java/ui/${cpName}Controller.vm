
package ${packageName};
#set($firstLetterJavaName =$stringUtil.getFirstLowerName($javaName))
import cn.com.gzqinghui.sysmgr.log.annotation.SystemControllerLog;
#if ($!componentName)
import cn.com.gzqinghui.${componentName}.${moduelName}.service.I${javaName}Service;
#else
import cn.com.gzqinghui.${moduelName}.service.I${javaName}Service;
#end
import org.apache.commons.lang3.StringUtils;
import com.dexcoder.commons.pager.AcePageBean;
import com.dexcoder.dal.annotation.FormModel;
import org.apache.commons.io.IOUtils;
import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

#if ($!componentName)
import cn.com.gzqinghui.${componentName}.${moduelName}.vo.${javaName}VO;
#else
import cn.com.gzqinghui.${moduelName}.vo.${javaName}VO;
#end
import java.io.Writer;
import java.util.Map;
import java.util.UUID;

/**
* ${componentName_zh_CN}-${moduelName_zh_CN}管理
* 广州清汇信息科技有限公司
* date: ${time}
*/
@Controller
#if ($!componentName)
@RequestMapping("/$componentName/$moduelName")
#else
@RequestMapping("/$moduelName")
#end
public class ${javaName}Controller {

    private static final Logger log = LoggerFactory.getLogger(${javaName}Controller.class);

    @Autowired
    private I${javaName}Service ${firstLetterJavaName}Service;

    /*
     * 获取${moduelName_zh_CN}列表
     */
    @RequestMapping(value = "/list",produces="application/json")
    @SystemControllerLog(model="${moduelName_zh_CN}模块",description="${moduelName_zh_CN}列表")
    public void list(@FormModel ${javaName}VO ${firstLetterJavaName}, @ModelAttribute AcePageBean pageBean, Writer out) throws Exception{

        JSONObject json = new JSONObject();

        try {
            Map<String, Object> ${firstLetterJavaName}s = ${firstLetterJavaName}Service.queryListByPage(${firstLetterJavaName}, pageBean);
            json.put("code","1");
            json.put("desc","查询成功");
            json.put("data",${firstLetterJavaName}s);
        } catch (Exception e) {
            e.printStackTrace();
            json.put("code","0");
            json.put("desc","查询失败");
        }

        IOUtils.write(json.toString(),out);
    }

    /*
     * 新增${moduelName_zh_CN}
     */
    @RequestMapping(value = "/add",produces="application/json",method= RequestMethod.POST)
    @SystemControllerLog(model="${moduelName_zh_CN}模块",description="新增${moduelName_zh_CN}")
    public void add(@FormModel ${javaName}VO ${firstLetterJavaName}, Writer out) throws Exception{

        JSONObject json = new JSONObject();

        try {
            int row = ${firstLetterJavaName}Service.save(${firstLetterJavaName});
            if(row < 1){
                throw new Exception("新增失败");
            }
            json.put("code","1");
            json.put("desc","新增成功");
        } catch (Exception e) {
            e.printStackTrace();
            json.put("code","0");
            json.put("desc","新增失败");
        }

        IOUtils.write(json.toString(),out);
    }

    /*
     * 编辑${moduelName_zh_CN}
     */
    @RequestMapping(value = "/update",produces="application/json",method= RequestMethod.POST)
    @SystemControllerLog(model="${moduelName_zh_CN}模块",description="编辑${moduelName_zh_CN}")
    public void update(@FormModel ${javaName}VO ${firstLetterJavaName}, Writer out) throws Exception{

        JSONObject json = new JSONObject();
        try {
            #set($methodColName=$stringUtil.getFirstUpperName(${tbInfo.getpKFieldName()}))
            int row = StringUtils.isNotBlank(${firstLetterJavaName}.get$methodColName())
                      ? ${firstLetterJavaName}Service.update(${firstLetterJavaName})
                        :${firstLetterJavaName}Service.save(${firstLetterJavaName});

            if(row < 1){
                throw new Exception("编辑失败");
            }
            json.put("code","1");
            json.put("desc","编辑成功");
        } catch (Exception e) {
            e.printStackTrace();
            json.put("code","0");
            json.put("desc","编辑失败");
        }
        IOUtils.write(json.toString(),out);
    }

    /*
     * 物理删除${moduelName_zh_CN}
     * 直接数据库delete
     */
    @RequestMapping(value = "/delete",produces="application/json",method= RequestMethod.POST)
    @SystemControllerLog(model="${moduelName_zh_CN}模块",description="删除${moduelName_zh_CN}")
    public void delete(String ids, Writer out) throws Exception{

        JSONObject json = new JSONObject();
        try {
            int row = ${firstLetterJavaName}Service.deleteByIds(${javaName}VO.class,ids);
            if(row < 1){
                throw new Exception("删除失败");
            }
            json.put("code","1");
            json.put("desc","删除成功");
        } catch (Exception e) {
            e.printStackTrace();
            json.put("code","0");
            json.put("desc","删除失败");
        }
        IOUtils.write(json.toString(),out);
    }

    /*
     * 逻辑删除${moduelName_zh_CN}
     * 数据库update
     */
    @RequestMapping(value = "/deleteLogicByIds",produces="application/json",method= RequestMethod.POST)
    @SystemControllerLog(model="${moduelName_zh_CN}模块",description="删除${moduelName_zh_CN}")
    public void deleteLogicByIds(String ids, Writer out) throws Exception{

        JSONObject json = new JSONObject();
        try {
            int row = ${firstLetterJavaName}Service.deleteLogicByIds(${javaName}VO.class,ids,null);
            if(row < 1) {
                throw new Exception("删除失败");
            }
            json.put("code","1");
            json.put("desc","删除成功");
        } catch (Exception e) {
            e.printStackTrace();
            json.put("code","0");
            json.put("desc","删除失败");
        }

        IOUtils.write(json.toString(),out);
    }

}
